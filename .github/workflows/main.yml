on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: "Build & Release"

jobs:
  # Test job for PRs
  test:
    name: Test & Analyze
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Flutter Analyze
        run: flutter analyze

      - name: Run Tests
        run: flutter test

  # Build and release job
  build-and-release:
    name: Build & Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.TOKEN }}

      - name: Extract Version from pubspec.yaml
        id: version
        run: |
          # Extract version from pubspec.yaml
          VERSION_WITH_BUILD=$(grep '^version: ' pubspec.yaml | sed 's/version: *//')
          VERSION=$(echo "$VERSION_WITH_BUILD" | cut -d'+' -f1)
          VERSION_CODE=$(echo "$VERSION_WITH_BUILD" | cut -d'+' -f2)
          
          # If version code is not specified, use default
          if [ "$VERSION" = "$VERSION_CODE" ]; then
            VERSION_CODE=1
          fi
          
          TAG="v$VERSION"
          
          echo "🚀 Extracted Version: $VERSION"
          echo "🔢 Version Code: $VERSION_CODE"
          echo "🏷️ Git Tag: $TAG"
          
          # Export to environment
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Find Previous Release for Changelog
        run: |
          # Get the most recent version tag for changelog comparison
          PREV_TAG=$(git tag -l 'v*' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -1)
          
          if [ -n "$PREV_TAG" ]; then
            echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          else
            echo "PREV_TAG=" >> $GITHUB_ENV
          fi

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          architecture: x64

      # Keystore setup
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../app/upload-keystore.jks" >> android/key.properties

      # Reproducible build settings
      - name: Set reproducible build parameters
        run: |
          echo "SOURCE_DATE_EPOCH=1577836800" >> $GITHUB_ENV
          echo "ZIPFLAGS=-X" >> $GITHUB_ENV

      # Quality checks
      - name: Flutter Analyze
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      # Build Android
      - name: Build Android APK
        run: |
          flutter build apk --release --split-per-abi

          cd build/app/outputs/apk/release
          mv app-armeabi-v7a-release.apk SysAdmin-v${{ env.VERSION }}-armeabi-v7a.apk
          mv app-arm64-v8a-release.apk SysAdmin-v${{ env.VERSION }}-arm64-v8a.apk
          mv app-x86_64-release.apk SysAdmin-v${{ env.VERSION }}-x86_64.apk

      # Build iOS
      - name: Build iOS App
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r SysAdmin-v${{ env.VERSION }}.ipa Payload

      # Create Tag if it doesn't exist
      - name: Create Tag
        run: |
          if ! git rev-parse ${{ env.TAG }} >/dev/null 2>&1; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag ${{ env.TAG }}
            git push origin ${{ env.TAG }}
            echo "Created new tag: ${{ env.TAG }}"
          else
            echo "Tag ${{ env.TAG }} already exists, skipping tag creation"
          fi

      # Create Release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/SysAdmin-v${{ env.VERSION }}-armeabi-v7a.apk
            build/app/outputs/apk/release/SysAdmin-v${{ env.VERSION }}-arm64-v8a.apk
            build/app/outputs/apk/release/SysAdmin-v${{ env.VERSION }}-x86_64.apk
            build/ios/iphoneos/SysAdmin-v${{ env.VERSION }}.ipa
          token: ${{ secrets.TOKEN }}
          tag: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          body: |
            # Release ${{ env.TAG }}
            ${{ github.event.head_commit.message }}
            #### Full Changelog: [${{ env.PREV_TAG }}...${{ env.TAG }}](https://github.com/${{ github.repository }}/compare/${{ env.PREV_TAG }}...${{ env.TAG }})
          draft: false
          prerelease: false
